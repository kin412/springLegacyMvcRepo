<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	<!-- spring container 내 root webApplicationContext -->	
	
	<context:component-scan base-package="com">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- 전자정부와 ibatis를 사용하지 않아 @mapper 어노테이션을 사용하지 못할 경우 -->
    <mybatis-spring:scan base-package="com.kin.**.service.impl"  />
    
    <!-- DB정보를 가지는 datasource 빈객체 생성 -->
    <!-- 
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" lazy-init="false">
	    <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	    <property name="url" value="jdbc:oracle:thin:@localhost:1521:ORCL" />
	    <property name="username" value="kin412" />
	    <property name="password" value="1234"/>
	</bean>   
	-->
	
	<!-- properties 적용 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" lazy-init="false">
        <property name="driverClassName" value="#{dbProp['db.driverClassName']}"/>
        <property name="url" value="#{dbProp['db.url']}" />
        <property name="username" value="#{dbProp['db.username']}"/>
        <property name="password" value="#{dbProp['db.password']}"/>
    </bean>
	
	<!--  DB정보를 자기는 datasource와 쿼리문을 작성하는 Mapper.xml이 있는 경로 설정하는 mapperLocations를 
	포함하는 빈 객체 생성 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSource"></property>
	    <property name="mapperLocations" value ="classpath:/mapper/**/*_SQL.xml"/> 
	    <property name="configLocation" value="classpath:/mapper/mybatis-config.xml"/>
	</bean>
	
	<!-- DB정보를 자기는 datasource와 쿼리문을 작성하는 Mapper.xml이 있는 경로 설정하는 mapperLocations를 
	포함하는 빈 객체를 가지는 sqlSessionTemplate 생성 <- 실제로 Mapper.java에서 주입을 통해 사용함 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	    <constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
</beans>
